package application;

import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaPlayer.Status;

import java.io.*;
import java.util.*;

public class Alice {
	LinkedList<File> queue;
	MediaPlayer alice;
	
	boolean loop;
	boolean pause;
	
	/**
	 * Loop the file that are playing
	 * If no file is playing, the method will return 
	 */
	void loop() {
//		if(alice.getStatus() == Status.STOPPED) {
//			return;
//		}
		
		if(!loop) {
			alice.setCycleCount(1);
		}else {
			alice.setCycleCount(MediaPlayer.INDEFINITE);
		}
		loop = !loop;
	}
	
	/**
	* play the next file
	*/
	void playNext(QueueInfo qi) {
		if(queue.size() >= 1) {
			alice = new MediaPlayer(new Media(queue.removeFirst().toURI().toString()));
			qi.update(queue);
			alice.play();
			alice.setOnEndOfMedia(new Runnable() {
				@Override
				public void run() {
					alice.stop();
					playNext(qi);
				}
			});
		}else {
			loop = false;
		}
	}
	
	void skip(QueueInfo qi) {
		alice.stop();
		if(!queue.isEmpty()) {
			alice = new MediaPlayer(new Media(queue.removeFirst().toURI().toString()));
			qi.update(queue);
			alice.play();
			if(loop) {
				alice.setCycleCount(MediaPlayer.INDEFINITE);
			}
			alice.setOnEndOfMedia(new Runnable() {
				@Override
				public void run() {
					alice.stop();
					playNext(qi);
				}
						
			});
		}
	}
	
	void clear() {
		queue = new LinkedList<File>();
	}
	
	void add(File f) {
		queue.addLast(f);
	}
	
	void insert(File f) {
		queue.addFirst(f);
	}
	
	void play(QueueInfo qi) {
		 Status cur = alice.getStatus();
		 if(cur == Status.PAUSED) {
			 alice.play();
			 pause = false;
		 }else if(cur == Status.PLAYING){
			 alice.pause();
			 pause = true;
		 }else if(!queue.isEmpty()) {
			 playNext(qi);
			 pause = false;
		 }
	}
	
	public Alice() {
		queue = new LinkedList<File>();
		alice = new MediaPlayer(new Media("http://www.sovmusic.ru/sam/s12264.mp3"));
		
		loop = false;
		pause = true;
	}
}
